<xqdoc:xqdoc xmlns:xqdoc="http://www.xqdoc.org/1.0">
    <xqdoc:control>
        <xqdoc:date>2019-05-14T12:08:24.519-04:00</xqdoc:date>
        <xqdoc:location>java:org.exist.xquery.modules.scheduler.SchedulerModule</xqdoc:location>
    </xqdoc:control>
    <xqdoc:module type="library">
        <xqdoc:uri>http://exist-db.org/xquery/scheduler</xqdoc:uri>
        <xqdoc:name>scheduler</xqdoc:name>
        <xqdoc:comment>
            <xqdoc:description>A module for scheduling jobs using the Quartz Scheduler</xqdoc:description>
        </xqdoc:comment>
    </xqdoc:module>
    <xqdoc:functions>
        <xqdoc:function>
            <xqdoc:name>scheduler:schedule-java-cron-job</xqdoc:name>
            <xqdoc:signature>scheduler:schedule-java-cron-job($java-classname as xs:string, $cron-expression as xs:string, $job-name as xs:string) as xs:boolean</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Schedules the Java Class named (the class must extend org.exist.scheduler.UserJavaJob) according to the Cron expression. The job will be registered using the job name.</xqdoc:description>
                <xqdoc:param>$java-classname The full name of the class to be executed.  It must extend the org.exist.scheduler.UserJavaJob class.</xqdoc:param>
                <xqdoc:param>$cron-expression The cron expression.  Please see the scheduler documentation.</xqdoc:param>
                <xqdoc:param>$job-name The name of the job.</xqdoc:param>
                <xqdoc:return>xs:boolean : a flag indicating successful execution</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>scheduler:schedule-java-cron-job</xqdoc:name>
            <xqdoc:signature>scheduler:schedule-java-cron-job($java-classname as xs:string, $cron-expression as xs:string, $job-name as xs:string, $job-parameters as element()?) as xs:boolean</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Schedules the Java Class named (the class must extend org.exist.scheduler.UserJavaJob) according to the Cron expression. The job will be registered using the name passed in $job-name. The final argument can be used to specify parameters for the job, which will be passed to the query as external variables. Parameters are specified in an XML fragment with the following structure: &lt;parameters&gt;&lt;param name="param-name1" value="param-value1"/&gt;&lt;/parameters&gt;.</xqdoc:description>
                <xqdoc:param>$java-classname The full name of the class to be executed.  It must extend the org.exist.scheduler.UserJavaJob class.</xqdoc:param>
                <xqdoc:param>$cron-expression The cron expression.  Please see the scheduler documentation.</xqdoc:param>
                <xqdoc:param>$job-name The name of the job.</xqdoc:param>
                <xqdoc:param>$job-parameters? The XML fragment with the following structure: &lt;parameters&gt;&lt;param name="param-name1" value="param-value1"/&gt;&lt;/parameters&gt;</xqdoc:param>
                <xqdoc:return>xs:boolean : a flag indicating successful execution</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>scheduler:schedule-java-periodic-job</xqdoc:name>
            <xqdoc:signature>scheduler:schedule-java-periodic-job($java-classname as xs:string, $period as xs:integer, $job-name as xs:string, $job-parameters as element()?, $delay as xs:integer, $repeat as xs:integer) as xs:boolean</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Schedules the Java Class named (the class must extend org.exist.scheduler.UserJavaJob) according to the periodic value. The job will be registered using the job name. The $job-parameters argument can be used to specify parameters for the job, which will be passed to the query as external variables. Parameters are specified in an XML fragment with the following structure: &lt;parameters&gt;&lt;param name="param-name1" value="param-value1"/&gt;&lt;/parameters&gt;,  Given the delay and the repeat.</xqdoc:description>
                <xqdoc:param>$java-classname The full name of the class to be executed.  It must extend the org.exist.scheduler.UserJavaJob class.</xqdoc:param>
                <xqdoc:param>$period Time in milliseconds between execution of the job</xqdoc:param>
                <xqdoc:param>$job-name The name of the job.</xqdoc:param>
                <xqdoc:param>$job-parameters? The XML fragment with the following structure: &lt;parameters&gt;&lt;param name="param-name1" value="param-value1"/&gt;&lt;/parameters&gt;</xqdoc:param>
                <xqdoc:param>$delay The period in milliseconds to delay the start of a job.</xqdoc:param>
                <xqdoc:param>$repeat The number of times to repeat the job after the initial execution. A value of -1 means repeat forever.</xqdoc:param>
                <xqdoc:return>xs:boolean : a flag indicating successful execution</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>scheduler:schedule-xquery-cron-job</xqdoc:name>
            <xqdoc:signature>scheduler:schedule-xquery-cron-job($xquery-resource as xs:string, $cron-expression as xs:string, $job-name as xs:string) as xs:boolean</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Schedules the named XQuery resource (e.g. /db/foo.xql) according to the Cron expression. XQuery job's will be launched under the guest account initially, although the running XQuery may switch permissions through calls to xmldb:login(). The job will be registered using the job name. Jobs submitted via this function are transitory and will be lost on a server restart. To ensure the persistence of scheduled tasks add them to the conf.xml file.</xqdoc:description>
                <xqdoc:param>$xquery-resource The path to the XQuery resource</xqdoc:param>
                <xqdoc:param>$cron-expression The cron expression.  Please see the scheduler documentation.</xqdoc:param>
                <xqdoc:param>$job-name The name of the job.</xqdoc:param>
                <xqdoc:return>xs:boolean : a flag indicating successful execution</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>scheduler:schedule-xquery-cron-job</xqdoc:name>
            <xqdoc:signature>scheduler:schedule-xquery-cron-job($xquery-resource as xs:string, $cron-expression as xs:string, $job-name as xs:string, $job-parameters as element()?) as xs:boolean</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Schedules the named XQuery resource (e.g. /db/foo.xql) according to the Cron expression. XQuery job's will be launched under the guest account initially, although the running XQuery may switch permissions through calls to xmldb:login(). The job will be registered using the job name. The final argument can be used to specify parameters for the job, which will be passed to the query as external variables. Parameters are specified in an XML fragment with the following structure: &lt;parameters&gt;&lt;param name="param-name1" value="param-value1"/&gt;&lt;/parameters&gt; Jobs submitted via this function are transitory and will be lost on a server restart. To ensure the persistence of scheduled tasks add them to the conf.xml file.</xqdoc:description>
                <xqdoc:param>$xquery-resource The path to the XQuery resource</xqdoc:param>
                <xqdoc:param>$cron-expression A cron expression.  Please see the scheduler documentation.</xqdoc:param>
                <xqdoc:param>$job-name The name of the job.</xqdoc:param>
                <xqdoc:param>$job-parameters? XML fragment with the following structure: &lt;parameters&gt;&lt;param name="param-name1" value="param-value1"/&gt;&lt;/parameters&gt;</xqdoc:param>
                <xqdoc:return>xs:boolean : Flag indicating successful execution</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>scheduler:schedule-xquery-cron-job</xqdoc:name>
            <xqdoc:signature>scheduler:schedule-xquery-cron-job($xquery-resource as xs:string, $cron-expression as xs:string, $job-name as xs:string, $job-parameters as element()?, $unschedule as xs:boolean) as xs:boolean</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Schedules the named XQuery resource (e.g. /db/foo.xql) according to the Cron expression. XQuery job's will be launched under the guest account initially, although the running XQuery may switch permissions through calls to xmldb:login(). The job will be registered using the job name. The job parameters argument can be used to specify parameters for the job, which will be passed to the query as external variables. Parameters are specified in an XML fragment with the following structure: &lt;parameters&gt;&lt;param name="param-name1" value="param-value1"/&gt;&lt;/parameters&gt; Jobs submitted via this function are transitory and will be lost on a server restart. To ensure the persistence of scheduled tasks add them to the conf.xml file.</xqdoc:description>
                <xqdoc:param>$xquery-resource The path to the XQuery resource</xqdoc:param>
                <xqdoc:param>$cron-expression A cron expression.  Please see the scheduler documentation.</xqdoc:param>
                <xqdoc:param>$job-name The name of the job.</xqdoc:param>
                <xqdoc:param>$job-parameters? XML fragment with the following structure: &lt;parameters&gt;&lt;param name="param-name1" value="param-value1"/&gt;&lt;/parameters&gt;</xqdoc:param>
                <xqdoc:param>$unschedule Specifies whether to unschedule this job if an XPathException is raised, default is true.</xqdoc:param>
                <xqdoc:return>xs:boolean : Flag indicating successful execution</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>scheduler:schedule-xquery-periodic-job</xqdoc:name>
            <xqdoc:signature>scheduler:schedule-xquery-periodic-job($xquery-resource as xs:string, $period as xs:integer, $job-name as xs:string, $job-parameters as element()?, $delay as xs:integer, $repeat as xs:integer) as xs:boolean</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Schedules the named XQuery resource (e.g. /db/foo.xql) according to the period. XQuery job's will be launched under the guest account initially, although the running XQuery may switch permissions through calls to xmldb:login(). The job will be registered using the job name. The job parameters argument can be used to specify parameters for the job, which will be passed to the query as external variables. Parameters are specified in an XML fragment with the following structure: &lt;parameters&gt;&lt;param name="param-name1" value="param-value1"/&gt;&lt;/parameters&gt;,  Given the delay passed and the repeat value. Jobs submitted via this function are transitory and will be lost on a server restart. To ensure the persistence of scheduled tasks add them to the conf.xml file.</xqdoc:description>
                <xqdoc:param>$xquery-resource The path to the XQuery resource</xqdoc:param>
                <xqdoc:param>$period Time in milliseconds between execution of the job</xqdoc:param>
                <xqdoc:param>$job-name The name of the job.</xqdoc:param>
                <xqdoc:param>$job-parameters? XML fragment with the following structure: &lt;parameters&gt;&lt;param name="param-name1" value="param-value1"/&gt;&lt;/parameters&gt;</xqdoc:param>
                <xqdoc:param>$delay Can be used with a period in milliseconds to delay the start of a job.</xqdoc:param>
                <xqdoc:param>$repeat Number of times to repeat the job after the initial execution. A value of -1 means repeat forever.</xqdoc:param>
                <xqdoc:return>xs:boolean : Flag indicating successful execution</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>scheduler:schedule-xquery-periodic-job</xqdoc:name>
            <xqdoc:signature>scheduler:schedule-xquery-periodic-job($xquery-resource as xs:string, $period as xs:integer, $job-name as xs:string, $job-parameters as element()?, $delay as xs:integer, $repeat as xs:integer, $unschedule as xs:boolean) as xs:boolean</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Schedules the named XQuery resource (e.g. /db/foo.xql) according to the period. XQuery job's will be launched under the guest account initially, although the running XQuery may switch permissions through calls to xmldb:login(). The job will be registered using the job name. The job parameters argument can be used to specify parameters for the job, which will be passed to the query as external variables. Parameters are specified in an XML fragment with the following structure: &lt;parameters&gt;&lt;param name="param-name1" value="param-value1"/&gt;&lt;/parameters&gt;,  Given the delay passed and the repeat value. Jobs submitted via this function are transitory and will be lost on a server restart. To ensure the persistence of scheduled tasks add them to the conf.xml file.</xqdoc:description>
                <xqdoc:param>$xquery-resource The path to the XQuery resource</xqdoc:param>
                <xqdoc:param>$period Time in milliseconds between execution of the job</xqdoc:param>
                <xqdoc:param>$job-name The name of the job.</xqdoc:param>
                <xqdoc:param>$job-parameters? XML fragment with the following structure: &lt;parameters&gt;&lt;param name="param-name1" value="param-value1"/&gt;&lt;/parameters&gt;</xqdoc:param>
                <xqdoc:param>$delay Can be used with a period in milliseconds to delay the start of a job.</xqdoc:param>
                <xqdoc:param>$repeat Number of times to repeat the job after the initial execution. A value of -1 means repeat forever.</xqdoc:param>
                <xqdoc:param>$unschedule Specifies whether to unschedule this job if an XPathException is raised, default is true.</xqdoc:param>
                <xqdoc:return>xs:boolean : Flag indicating successful execution</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>scheduler:get-scheduled-jobs</xqdoc:name>
            <xqdoc:signature>scheduler:get-scheduled-jobs() as node()</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Gets the details of all scheduled jobs in the form: &lt;scheduler:jobs xmlns:scheduler="http://exist-db.org/xquery/scheduler" count="iJobs"&gt;    &lt;scheduler:group name="group"&gt;        &lt;scheduler:job name=""&gt;            &lt;scheduler:trigger name=""&gt;                &lt;expression&gt;&lt;/expression&gt;                &lt;state&gt;&lt;/state&gt;                &lt;start&gt;&lt;/start&gt;                &lt;end&gt;&lt;/end&gt;                &lt;previous&gt;&lt;/previous&gt;                &lt;next&gt;&lt;/next&gt;                &lt;final&gt;&lt;/final&gt;            &lt;/scheduler:trigger&gt;        &lt;/scheduler:job&gt;    &lt;/scheduler:group&gt;&lt;/scheduler:jobs&gt;</xqdoc:description>
                <xqdoc:return>node() : the XML containing the list of jobs</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>scheduler:delete-scheduled-job</xqdoc:name>
            <xqdoc:signature>scheduler:delete-scheduled-job($job-name as xs:string) as xs:boolean</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Delete the named job named from the Scheduler. Will only delete User Scheduled Jobs! Returns true if the Job was deleted.</xqdoc:description>
                <xqdoc:param>$job-name The name of the job to be deleted</xqdoc:param>
                <xqdoc:return>xs:boolean : a boolean value indicating success or failure on deleting the named job.</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>scheduler:pause-scheduled-job</xqdoc:name>
            <xqdoc:signature>scheduler:pause-scheduled-job($job-name as xs:string) as xs:boolean</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Pause the named job in the scheduler. Will only pause user scheduled jobs!</xqdoc:description>
                <xqdoc:param>$job-name The name of the job in the scheduler</xqdoc:param>
                <xqdoc:return>xs:boolean : the success of the pausing of the named job</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>scheduler:resume-scheduled-job</xqdoc:name>
            <xqdoc:signature>scheduler:resume-scheduled-job($job-name as xs:string) as xs:boolean</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Resumes the named job in the scheduler. Will only resume user scheduled jobs!</xqdoc:description>
                <xqdoc:param>$job-name The name of the job to resume.</xqdoc:param>
                <xqdoc:return>xs:boolean : the indicator of successful resumption</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
    </xqdoc:functions>
</xqdoc:xqdoc>