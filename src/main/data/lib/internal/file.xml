<xqdoc:xqdoc xmlns:xqdoc="http://www.xqdoc.org/1.0">
    <xqdoc:control>
        <xqdoc:date>2019-05-14T12:08:24.519-04:00</xqdoc:date>
        <xqdoc:location>java:org.exist.xquery.modules.file.FileModule</xqdoc:location>
    </xqdoc:control>
    <xqdoc:module type="library">
        <xqdoc:uri>http://exist-db.org/xquery/file</xqdoc:uri>
        <xqdoc:name>file</xqdoc:name>
        <xqdoc:comment>
            <xqdoc:description>A module for performing various operations on files and directories stored in the server file system.</xqdoc:description>
        </xqdoc:comment>
    </xqdoc:module>
    <xqdoc:functions>
        <xqdoc:function>
            <xqdoc:name>file:list</xqdoc:name>
            <xqdoc:signature>file:list($path as item()) as node()*</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>List all files and directories under the specified directory. This method is only available to the DBA role.</xqdoc:description>
                <xqdoc:param>$path The directory path or URI in the file system.</xqdoc:param>
                <xqdoc:return>node()* : a node describing file and directory names and meta data.</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>file:directory-list</xqdoc:name>
            <xqdoc:signature>file:directory-list($path as item(), $pattern as xs:string) as node()?</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>List all files, including their file size and modification time, found in or below a directory, $directory. Files are located in the server's file system, using filename patterns, $pattern.  File pattern matching is based on code from Apache's Ant, thus following the same conventions. For example:

'*.xml' matches any file ending with .xml in the current directory,
- '**/*.xml' matches files in any directory below the specified directory.  This method is only available to the DBA role.</xqdoc:description>
                <xqdoc:param>$path The base directory path or URI in the file system where the files are located.</xqdoc:param>
                <xqdoc:param>$pattern The file name pattern</xqdoc:param>
                <xqdoc:return>node()? : a node fragment that shows all matching filenames, including their file size and modification time, and the subdirectory they were found in</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>file:read</xqdoc:name>
            <xqdoc:signature>file:read($path as item()) as xs:string?</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Reads the content of file.  This method is only available to the DBA role.</xqdoc:description>
                <xqdoc:param>$path The directory path or URI in the file system.</xqdoc:param>
                <xqdoc:return>xs:string? : the file contents</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>file:read</xqdoc:name>
            <xqdoc:signature>file:read($path as item(), $encoding as xs:string) as xs:string?</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Reads the content of file.  This method is only available to the DBA role.</xqdoc:description>
                <xqdoc:param>$path The directory path or URI in the file system.</xqdoc:param>
                <xqdoc:param>$encoding The encoding type for the file</xqdoc:param>
                <xqdoc:return>xs:string? : the file contents</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>file:read-binary</xqdoc:name>
            <xqdoc:signature>file:read-binary($path as item()) as xs:base64Binary?</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Reads the contents of a binary file.  This method is only available to the DBA role.</xqdoc:description>
                <xqdoc:param>$path The directory path or URI in the file system.</xqdoc:param>
                <xqdoc:return>xs:base64Binary? : the file contents</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>file:read-unicode</xqdoc:name>
            <xqdoc:signature>file:read-unicode($path as item()) as xs:string?</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Reads the contents of a file.  Unicode BOM (Byte Order Marker) will be stripped off if found.  This method is only available to the DBA role.</xqdoc:description>
                <xqdoc:param>$path The directory path or URI in the file system.</xqdoc:param>
                <xqdoc:return>xs:string? : the contents of the file</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>file:read-unicode</xqdoc:name>
            <xqdoc:signature>file:read-unicode($path as item(), $encoding as xs:string) as xs:string?</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Reads the contents of a file.  Unicode BOM (Byte Order Marker) will be stripped off if found.  This method is only available to the DBA role.</xqdoc:description>
                <xqdoc:param>$path The directory path or URI in the file system.</xqdoc:param>
                <xqdoc:param>$encoding The file is read with the encoding specified.</xqdoc:param>
                <xqdoc:return>xs:string? : the contents of the file</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>file:serialize</xqdoc:name>
            <xqdoc:signature>file:serialize($node-set as node()*, $path as item(), $parameters as item()*) as xs:boolean?</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Writes the node set into a file on the file system. $parameters contains a sequence of zero or more serialization parameters specified as key=value pairs. The serialization options are the same as those recognized by "declare option exist:serialize". The function does NOT automatically inherit the serialization options of the XQuery it is called from.  This method is only available to the DBA role.</xqdoc:description>
                <xqdoc:param>$node-set* The contents to write to the file system.</xqdoc:param>
                <xqdoc:param>$path The full path or URI to the file</xqdoc:param>
                <xqdoc:param>$parameters* The serialization parameters: either a sequence of key=value pairs or an output:serialization-parameters element as defined by the standard fn:serialize function.</xqdoc:param>
                <xqdoc:return>xs:boolean? : true on success - false if the specified file can not be created or is not writable.  The empty sequence is returned if the argument sequence is empty.</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>file:serialize</xqdoc:name>
            <xqdoc:signature>file:serialize($node-set as node()*, $path as item(), $parameters as item()*, $append as xs:boolean) as xs:boolean?</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Writes the node set into a file on the file system, optionally appending to it. $parameters contains a sequence of zero or more serialization parameters specified as key=value pairs. The serialization options are the same as those recognized by "declare option exist:serialize". The function does NOT automatically inherit the serialization options of the XQuery it is called from.  This method is only available to the DBA role.</xqdoc:description>
                <xqdoc:param>$node-set* The contents to write to the file system.</xqdoc:param>
                <xqdoc:param>$path The full path or URI to the file</xqdoc:param>
                <xqdoc:param>$parameters* The serialization parameters: either a sequence of key=value pairs or an output:serialization-parameters element as defined by the standard fn:serialize function.</xqdoc:param>
                <xqdoc:param>$append Should content be appended?</xqdoc:param>
                <xqdoc:return>xs:boolean? : true on success - false if the specified file can not be created or is not writable.  The empty sequence is returned if the argument sequence is empty.</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>file:serialize-binary</xqdoc:name>
            <xqdoc:signature>file:serialize-binary($binarydata as xs:base64Binary, $path as item()) as xs:boolean</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Writes binary data into a file on the file system.  This method is only available to the DBA role.</xqdoc:description>
                <xqdoc:param>$binarydata The contents to write to the file system.</xqdoc:param>
                <xqdoc:param>$path The full path or URI to the file</xqdoc:param>
                <xqdoc:return>xs:boolean : true on success - false if the specified file can not be created or is not writable</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>file:serialize-binary</xqdoc:name>
            <xqdoc:signature>file:serialize-binary($binarydata as xs:base64Binary, $path as item(), $append as xs:boolean) as xs:boolean</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Writes binary data into a file on the file system, optionally appending the content.  This method is only available to the DBA role.</xqdoc:description>
                <xqdoc:param>$binarydata The contents to write to the file system.</xqdoc:param>
                <xqdoc:param>$path The full path or URI to the file</xqdoc:param>
                <xqdoc:param>$append Should content be appended?</xqdoc:param>
                <xqdoc:return>xs:boolean : true on success - false if the specified file can not be created or is not writable</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>file:exists</xqdoc:name>
            <xqdoc:signature>file:exists($path as item()) as xs:boolean</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Tests if a file or directory exists.  This method is only available to the DBA role.</xqdoc:description>
                <xqdoc:param>$path The full path or URI to the file in the file system</xqdoc:param>
                <xqdoc:return>xs:boolean : the boolean value true if the file exists, false otherwise</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>file:is-readable</xqdoc:name>
            <xqdoc:signature>file:is-readable($path as item()) as xs:boolean</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Tests if a file is readable.  This method is only available to the DBA role.</xqdoc:description>
                <xqdoc:param>$path The full path or URI to the file</xqdoc:param>
                <xqdoc:return>xs:boolean : true if file can be read</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>file:is-writeable</xqdoc:name>
            <xqdoc:signature>file:is-writeable($path as item()) as xs:boolean</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Tests if a file is writeable.  This method is only available to the DBA role.</xqdoc:description>
                <xqdoc:param>$path The full path or URI to the file</xqdoc:param>
                <xqdoc:return>xs:boolean : true if the file has write permissions</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>file:is-directory</xqdoc:name>
            <xqdoc:signature>file:is-directory($path as item()) as xs:boolean</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Tests if a path is a directory.  This method is only available to the DBA role.</xqdoc:description>
                <xqdoc:param>$path The full path or URI to the file or directory</xqdoc:param>
                <xqdoc:return>xs:boolean : true if the path is a directory</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>file:delete</xqdoc:name>
            <xqdoc:signature>file:delete($path as item()) as xs:boolean</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Delete a file or directory.  This method is only available to the DBA role.</xqdoc:description>
                <xqdoc:param>$path The full path or URI to the file</xqdoc:param>
                <xqdoc:return>xs:boolean : true if successful, false otherwise</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>file:move</xqdoc:name>
            <xqdoc:signature>file:move($original as item(), $destination as item()) as xs:boolean</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Move (rename) a file or directory. Exact operation is platform dependent. This method is only available to the DBA role.</xqdoc:description>
                <xqdoc:param>$original The full path or URI to the file</xqdoc:param>
                <xqdoc:param>$destination The full path or URI to the file</xqdoc:param>
                <xqdoc:return>xs:boolean : true if successful, false otherwise</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>file:mkdir</xqdoc:name>
            <xqdoc:signature>file:mkdir($path as item()) as xs:boolean</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Create a directory.  This method is only available to the DBA role.</xqdoc:description>
                <xqdoc:param>$path The full path or URI to the directory</xqdoc:param>
                <xqdoc:return>xs:boolean : true if successful, false otherwise</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>file:mkdirs</xqdoc:name>
            <xqdoc:signature>file:mkdirs($path as item()) as xs:boolean</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Create a directory including any necessary but nonexistent parent directories. This method is only available to the DBA role.</xqdoc:description>
                <xqdoc:param>$path The full path or URI to the directory</xqdoc:param>
                <xqdoc:return>xs:boolean : true if successful, false otherwise</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>file:sync</xqdoc:name>
            <xqdoc:signature>file:sync($collection as xs:string, $targetPath as item(), $dateTime as xs:dateTime?) as xs:boolean</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Synchronize a collection with a directory hierarchy. Compares last modified time stamps. If $dateTime is given, only resources modified after this time stamp are taken into account. This method is only available to the DBA role.</xqdoc:description>
                <xqdoc:param>$collection The collection to sync.</xqdoc:param>
                <xqdoc:param>$targetPath The full path or URI to the directory</xqdoc:param>
                <xqdoc:param>$dateTime? Optional: only resources modified after the given date/time will be synchronized.</xqdoc:param>
                <xqdoc:return>xs:boolean : true if successful, false otherwise</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
    </xqdoc:functions>
</xqdoc:xqdoc>