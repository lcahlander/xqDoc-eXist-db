<xqdoc:xqdoc xmlns:xqdoc="http://www.xqdoc.org/1.0">
    <xqdoc:control>
        <xqdoc:date>2019-05-14T12:08:24.519-04:00</xqdoc:date>
        <xqdoc:location>java:org.exist.contentextraction.xquery.ContentExtractionModule</xqdoc:location>
    </xqdoc:control>
    <xqdoc:module type="library">
        <xqdoc:uri>http://exist-db.org/xquery/contentextraction</xqdoc:uri>
        <xqdoc:name>contentextraction</xqdoc:name>
        <xqdoc:comment>
            <xqdoc:description>Module for processing content and returning metadata and content</xqdoc:description>
        </xqdoc:comment>
    </xqdoc:module>
    <xqdoc:functions>
        <xqdoc:function>
            <xqdoc:name>contentextraction:get-metadata</xqdoc:name>
            <xqdoc:signature>contentextraction:get-metadata($binary as xs:base64Binary) as document-node()</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>extracts the metadata</xqdoc:description>
                <xqdoc:param>$binary The binary data to extract from</xqdoc:param>
                <xqdoc:return>document-node() : Extracted metadata</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>contentextraction:get-metadata-and-content</xqdoc:name>
            <xqdoc:signature>contentextraction:get-metadata-and-content($binary as xs:base64Binary) as document-node()</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>extracts the metadata and contents</xqdoc:description>
                <xqdoc:param>$binary The binary data to extract from</xqdoc:param>
                <xqdoc:return>document-node() : Extracted content and metadata</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>contentextraction:stream-content</xqdoc:name>
            <xqdoc:signature>contentextraction:stream-content($binary as xs:base64Binary, $paths as xs:string*, $callback as function(*), $namespaces as element()?, $userData as item()*) as empty-sequence()</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>extracts the metadata</xqdoc:description>
                <xqdoc:param>$binary The binary data to extract from</xqdoc:param>
                <xqdoc:param>$paths* A sequence of (simple) node paths which should be passed to the callback function</xqdoc:param>
                <xqdoc:param>$callback The callback function. Expected signature: callback($node as node(), $userData as item()*, $retValue as item()*),where $node is the currently processed node, $userData contains the data supplied in the $userData parameter of stream-content, and $retValue is the return value of the previous call to the callback function. The last two parameters are used for passing information between the calling function and subsequent invocations of the callback function.</xqdoc:param>
                <xqdoc:param>$namespaces? Prefix/namespace mappings to be used for matching the paths. Pass an XML fragment with the following structure: &lt;namespaces&gt;&lt;namespace prefix="prefix" uri="uri"/&gt;&lt;/namespaces&gt;.</xqdoc:param>
                <xqdoc:param>$userData* Additional data which will be passed to the callback function.</xqdoc:param>
                <xqdoc:return>empty-sequence() : Returns empty sequence</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
    </xqdoc:functions>
</xqdoc:xqdoc>