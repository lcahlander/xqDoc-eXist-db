<xqdoc:xqdoc xmlns:xqdoc="http://www.xqdoc.org/1.0">
    <xqdoc:control>
        <xqdoc:date>2019-05-14T12:08:24.519-04:00</xqdoc:date>
        <xqdoc:location>java:org.exist.xquery.modules.sort.SortModule</xqdoc:location>
    </xqdoc:control>
    <xqdoc:module type="library">
        <xqdoc:uri>http://exist-db.org/xquery/sort</xqdoc:uri>
        <xqdoc:name>sort</xqdoc:name>
        <xqdoc:comment>
            <xqdoc:description>Creates and manages pre-ordered indexes for use with an 'order by' expression.</xqdoc:description>
        </xqdoc:comment>
    </xqdoc:module>
    <xqdoc:functions>
        <xqdoc:function>
            <xqdoc:name>sort:create-index</xqdoc:name>
            <xqdoc:signature>sort:create-index($id as xs:string, $nodes as node()*, $values as xs:anyAtomicType*, $options as element()?) as item()*</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Create a sort index to be used within an 'order by' expression.</xqdoc:description>
                <xqdoc:param>$id The id by which the index will be known and distinguished from other indexes on the same nodes.</xqdoc:param>
                <xqdoc:param>$nodes* The node set to be indexed.</xqdoc:param>
                <xqdoc:param>$values* The values to be indexed. There should be one value for each node in $nodes. $values thus needs to contain as many items as $nodes. If not, a dynamic error is triggered.</xqdoc:param>
                <xqdoc:param>$options? &lt;options order='ascending|descending' empty='least|greatest'/&gt;</xqdoc:param>
                <xqdoc:return>item()* : </xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>sort:create-index-callback</xqdoc:name>
            <xqdoc:signature>sort:create-index-callback($id as xs:string, $nodes as node()*, $callback as function(*), $options as element()?) as item()*</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Create a sort index to be used within an 'order by' expression.</xqdoc:description>
                <xqdoc:param>$id The id by which the index will be known and distinguished from other indexes on the same nodes.</xqdoc:param>
                <xqdoc:param>$nodes* The node set to be indexed.</xqdoc:param>
                <xqdoc:param>$callback A callback function which will be called for every node in the $nodes input set. The function receives the current node as single argument and should return an atomic value by which the node will be sorted.</xqdoc:param>
                <xqdoc:param>$options? &lt;options order='ascending|descending' empty='least|greatest'/&gt;</xqdoc:param>
                <xqdoc:return>item()* : </xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>sort:index</xqdoc:name>
            <xqdoc:signature>sort:index($id as xs:string, $node as node()?) as xs:long?</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Look up a node in the sort index and return a number (&amp;gt; 0) corresponding to the position of that node in the ordered set which was created by a previous call to the sort:create-index function. The function returns the empty sequence if the node cannot be found in the index.</xqdoc:description>
                <xqdoc:param>$id The name of the index.</xqdoc:param>
                <xqdoc:param>$node? The node to look up.</xqdoc:param>
                <xqdoc:return>xs:long? : A number &amp;gt; 0 or the empty sequence if the $node argument was empty or the node could not be found in the index.</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>sort:has-index</xqdoc:name>
            <xqdoc:signature>sort:has-index($id as xs:string) as xs:boolean</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Check if the sort index, $id, exists.</xqdoc:description>
                <xqdoc:param>$id The name of the index.</xqdoc:param>
                <xqdoc:return>xs:boolean : true() if the sort index, $id, exists, false() otherwise.</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>sort:remove-index</xqdoc:name>
            <xqdoc:signature>sort:remove-index($id as xs:string) as item()*</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Remove a sort index identified by its name.</xqdoc:description>
                <xqdoc:param>$id The name of the index to be removed.</xqdoc:param>
                <xqdoc:return>item()* : </xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>sort:remove-index</xqdoc:name>
            <xqdoc:signature>sort:remove-index($id as xs:string, $document-node as node()) as item()*</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Remove all sort index entries for the given document.</xqdoc:description>
                <xqdoc:param>$id The name of the index to be removed.</xqdoc:param>
                <xqdoc:param>$document-node A node from the document for which entries should be removed.</xqdoc:param>
                <xqdoc:return>item()* : </xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
    </xqdoc:functions>
</xqdoc:xqdoc>