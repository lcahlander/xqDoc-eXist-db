<xqdoc:xqdoc xmlns:xqdoc="http://www.xqdoc.org/1.0">
    <xqdoc:control>
        <xqdoc:date>2019-05-14T12:08:24.519-04:00</xqdoc:date>
        <xqdoc:location>java:org.exist.xquery.functions.system.SystemModule</xqdoc:location>
    </xqdoc:control>
    <xqdoc:module type="library">
        <xqdoc:uri>http://exist-db.org/xquery/system</xqdoc:uri>
        <xqdoc:name>system</xqdoc:name>
        <xqdoc:comment>
            <xqdoc:description>A module for retrieving information about eXist and the system.</xqdoc:description>
        </xqdoc:comment>
    </xqdoc:module>
    <xqdoc:functions>
        <xqdoc:function>
            <xqdoc:name>system:export</xqdoc:name>
            <xqdoc:signature>system:export($dir as xs:string, $incremental as xs:boolean?, $zip as xs:boolean?) as node()</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Export a backup of the database (admin user only).</xqdoc:description>
                <xqdoc:param>$dir This is an absolute path to where the backup will be written. Must be writeable by the eXist process.</xqdoc:param>
                <xqdoc:param>$incremental? Flag to do incremental export.</xqdoc:param>
                <xqdoc:param>$zip? Flag to do export to zip file.</xqdoc:param>
                <xqdoc:return>node() : the export results</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>system:export-silently</xqdoc:name>
            <xqdoc:signature>system:export-silently($dir as xs:string, $incremental as xs:boolean?, $zip as xs:boolean?) as xs:boolean</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Export a backup of the database (admin user only). Messagers from exporter reroute to logs.</xqdoc:description>
                <xqdoc:param>$dir This is an absolute path to where the backup will be written. Must be writeable by the eXist process.</xqdoc:param>
                <xqdoc:param>$incremental? Flag to do incremental export.</xqdoc:param>
                <xqdoc:param>$zip? Flag to do export to zip file.</xqdoc:param>
                <xqdoc:return>xs:boolean : the export results</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>system:import</xqdoc:name>
            <xqdoc:signature>system:import($dir-or-file as xs:string, $admin-pass as xs:string?, $new-admin-pass as xs:string?) as node()</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Restore the database or a section of the database (admin user only).</xqdoc:description>
                <xqdoc:param>$dir-or-file This is either a backup directory with the backup descriptor (__contents__.xml) or a backup ZIP file.</xqdoc:param>
                <xqdoc:param>$admin-pass? The password for the admin user</xqdoc:param>
                <xqdoc:param>$new-admin-pass? Set the admin password to this new password.</xqdoc:param>
                <xqdoc:return>node() : the import results</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>system:import-silently</xqdoc:name>
            <xqdoc:signature>system:import-silently($dir-or-file as xs:string, $admin-pass as xs:string?, $new-admin-pass as xs:string?) as node()</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Restore the database or a section of the database (admin user only). Messagers from exporter reroute to logs.</xqdoc:description>
                <xqdoc:param>$dir-or-file This is either a backup directory with the backup descriptor (__contents__.xml) or a backup ZIP file.</xqdoc:param>
                <xqdoc:param>$admin-pass? The password for the admin user</xqdoc:param>
                <xqdoc:param>$new-admin-pass? Set the admin password to this new password.</xqdoc:param>
                <xqdoc:return>node() : the import results</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>system:count-instances-max</xqdoc:name>
            <xqdoc:signature>system:count-instances-max() as xs:integer</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Returns the maximum number of eXist instances.</xqdoc:description>
                <xqdoc:return>xs:integer : the count</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>system:count-instances-active</xqdoc:name>
            <xqdoc:signature>system:count-instances-active() as xs:integer</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Returns the number of eXist instances that are active.</xqdoc:description>
                <xqdoc:return>xs:integer : the count</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>system:count-instances-available</xqdoc:name>
            <xqdoc:signature>system:count-instances-available() as xs:integer</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Returns the number of eXist instances that are available.</xqdoc:description>
                <xqdoc:return>xs:integer : the count</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>system:get-memory-max</xqdoc:name>
            <xqdoc:signature>system:get-memory-max() as xs:long</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Returns the maximum amount of memory eXist may use.</xqdoc:description>
                <xqdoc:return>xs:long : the size of memory</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>system:get-memory-total</xqdoc:name>
            <xqdoc:signature>system:get-memory-total() as xs:long</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Returns the total amount of memory in use by eXist.</xqdoc:description>
                <xqdoc:return>xs:long : the size of memory</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>system:get-memory-free</xqdoc:name>
            <xqdoc:signature>system:get-memory-free() as xs:long</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Returns the amount of free memory available to eXist.</xqdoc:description>
                <xqdoc:return>xs:long : the size of memory</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>system:get-version</xqdoc:name>
            <xqdoc:signature>system:get-version() as xs:string</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Returns the version of eXist running this query.</xqdoc:description>
                <xqdoc:return>xs:string : the version string</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>system:get-build</xqdoc:name>
            <xqdoc:signature>system:get-build() as xs:string</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Returns the build of eXist running this query.</xqdoc:description>
                <xqdoc:return>xs:string : the build number</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>system:get-revision</xqdoc:name>
            <xqdoc:signature>system:get-revision() as xs:string</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Returns the Git commit ID of the eXist instance running this query.</xqdoc:description>
                <xqdoc:return>xs:string : the Git commit ID.</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>system:get-exist-home</xqdoc:name>
            <xqdoc:signature>system:get-exist-home() as xs:string</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Returns the eXist home location.</xqdoc:description>
                <xqdoc:return>xs:string : the path to the eXist home</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>system:shutdown</xqdoc:name>
            <xqdoc:signature>system:shutdown() as item()</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Shutdown eXist immediately.  This method is only available to the DBA role.</xqdoc:description>
                <xqdoc:return>item()</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>system:shutdown</xqdoc:name>
            <xqdoc:signature>system:shutdown($delay as xs:long) as item()</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Shutdown eXist.  This method is only available to the DBA role.</xqdoc:description>
                <xqdoc:param>$delay The delay in milliseconds before eXist starts to shutdown.</xqdoc:param>
                <xqdoc:return>item()</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>system:get-module-load-path</xqdoc:name>
            <xqdoc:signature>system:get-module-load-path() as xs:string</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Returns the module load path from the current query context. The module load path corresponds to the location on the file system from where modules are loaded into an XQuery. This is usually the directory from which the main XQuery was compiled, or - when executing a stored XQuery - the collection in which the main query resides. The module load path is also used to resolve relative XInclude paths.</xqdoc:description>
                <xqdoc:return>xs:string : the load path</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>system:trigger-system-task</xqdoc:name>
            <xqdoc:signature>system:trigger-system-task($java-classname as xs:string, $task-parameters as node()?) as item()</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Trigger a system task.</xqdoc:description>
                <xqdoc:param>$java-classname The full name of the Java class to execute.  It must implement org.exist.storage.SystemTask</xqdoc:param>
                <xqdoc:param>$task-parameters? The XML fragment with the following structure: &lt;parameters&gt;&lt;param name="param-name1" value="param-value1"/&gt;&lt;/parameters&gt;</xqdoc:param>
                <xqdoc:return>item()</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>system:as-user</xqdoc:name>
            <xqdoc:signature>system:as-user($username as xs:string, $password as xs:string?, $code-block as item()*) as item()*</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>A pseudo-function to execute a limited block of code as a different user. The first argument is the name of the user, the second is the password. If the user can be authenticated, the function will execute the code block given in the third argument with the permissions of that user andreturns the result of the execution. Before the function completes, it switches the current user back to the old user.</xqdoc:description>
                <xqdoc:param>$username The username of the user to run the code against</xqdoc:param>
                <xqdoc:param>$password? The password of the user to run the code against</xqdoc:param>
                <xqdoc:param>$code-block* The code block to run as the identified user</xqdoc:param>
                <xqdoc:return>item()* : the results of the code block executed</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>system:get-index-statistics</xqdoc:name>
            <xqdoc:signature>system:get-index-statistics() as node()?</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Internal function</xqdoc:description>
                <xqdoc:return>node()? : the resource containing the index statistics</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>system:update-statistics</xqdoc:name>
            <xqdoc:signature>system:update-statistics() as empty-sequence()</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>This function is part of the unfinished index statistics module, which is not yet usable in a normal eXist setup. update-statistics rebuilds index statistics for the entire database.</xqdoc:description>
                <xqdoc:return>empty-sequence()</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>system:get-running-xqueries</xqdoc:name>
            <xqdoc:signature>system:get-running-xqueries() as item()</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Get a list of running XQueries (dba role only).</xqdoc:description>
                <xqdoc:return>item() : a node containing the list of running XQueries</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>system:kill-running-xquery</xqdoc:name>
            <xqdoc:signature>system:kill-running-xquery($xquery-id as xs:integer) as item()</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Kill a running XQuey (dba role only).</xqdoc:description>
                <xqdoc:param>$xquery-id The XQuery ID obtained from get-running-xqueries()</xqdoc:param>
                <xqdoc:return>item()</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>system:kill-running-xquery</xqdoc:name>
            <xqdoc:signature>system:kill-running-xquery($xquery-id as xs:integer, $wait-time as xs:long) as item()</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Kill a running XQuey (dba role only).</xqdoc:description>
                <xqdoc:param>$xquery-id The XQuery ID obtained from get-running-xqueries()</xqdoc:param>
                <xqdoc:param>$wait-time The wait time in milliseconds before terminating the XQuery</xqdoc:param>
                <xqdoc:return>item()</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>system:get-running-jobs</xqdoc:name>
            <xqdoc:signature>system:get-running-jobs() as item()</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Get a list of running jobs (dba role only).</xqdoc:description>
                <xqdoc:return>item() : the list of running jobs</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>system:get-scheduled-jobs</xqdoc:name>
            <xqdoc:signature>system:get-scheduled-jobs() as item()</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Get a list of scheduled jobs (dba role only).</xqdoc:description>
                <xqdoc:return>item() : a node containing the list of scheduled jobs</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>system:restore</xqdoc:name>
            <xqdoc:signature>system:restore($dir-or-file as xs:string, $admin-pass as xs:string?, $new-admin-pass as xs:string?) as node()</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Restore the database or a section of the database (admin user only).</xqdoc:description>
                <xqdoc:param>$dir-or-file This is either a backup directory with the backup descriptor (__contents__.xml) or a backup ZIP file.</xqdoc:param>
                <xqdoc:param>$admin-pass? The password for the admin user</xqdoc:param>
                <xqdoc:param>$new-admin-pass? Set the admin password to this new password.</xqdoc:param>
                <xqdoc:return>node() : the restore results</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>system:trace</xqdoc:name>
            <xqdoc:signature>system:trace() as node()</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Returns function call statistics gathered by the trace log.</xqdoc:description>
                <xqdoc:return>node() : the call statistics gathered by the trace</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>system:enable-tracing</xqdoc:name>
            <xqdoc:signature>system:enable-tracing($enable as xs:boolean) as item()</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Enable function tracing on the database instance.</xqdoc:description>
                <xqdoc:param>$enable The boolean flag to enable/disable function tracing</xqdoc:param>
                <xqdoc:return>item()</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>system:enable-tracing</xqdoc:name>
            <xqdoc:signature>system:enable-tracing($enable as xs:boolean, $tracelog as xs:boolean) as item()</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Enable function tracing on the database instance.</xqdoc:description>
                <xqdoc:param>$enable The enable boolean flag to enable/disable function tracing</xqdoc:param>
                <xqdoc:param>$tracelog The tracelog boolean flag: if set to true, entering/exiting a function will be logged to the logger 'xquery.profiling'</xqdoc:param>
                <xqdoc:return>item()</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>system:tracing-enabled</xqdoc:name>
            <xqdoc:signature>system:tracing-enabled() as xs:boolean</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Returns true if function tracing is currently enabled on the database instance.</xqdoc:description>
                <xqdoc:return>xs:boolean : true is tracing is enabled.</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>system:clear-trace</xqdoc:name>
            <xqdoc:signature>system:clear-trace() as item()</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Clear the global trace log.</xqdoc:description>
                <xqdoc:return>item()</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>system:get-uptime</xqdoc:name>
            <xqdoc:signature>system:get-uptime() as xs:dayTimeDuration</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Returns the time since eXist-db was started. The value is stable over the lifetime of a query.</xqdoc:description>
                <xqdoc:return>xs:dayTimeDuration : the duration since eXist-db was started</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>system:function-available</xqdoc:name>
            <xqdoc:signature>system:function-available($function-name as xs:QName, $arity as xs:integer) as xs:boolean</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Returns whether a function is available.</xqdoc:description>
                <xqdoc:param>$function-name The fully qualified name of the function</xqdoc:param>
                <xqdoc:param>$arity The arity of the function</xqdoc:param>
                <xqdoc:return>xs:boolean : true() if the function exists, false() otherwise.</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>system:clear-xquery-cache</xqdoc:name>
            <xqdoc:signature>system:clear-xquery-cache() as empty-sequence()</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Clear XQuery cache.</xqdoc:description>
                <xqdoc:return>empty-sequence()</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
    </xqdoc:functions>
</xqdoc:xqdoc>