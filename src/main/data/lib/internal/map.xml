<xqdoc:xqdoc xmlns:xqdoc="http://www.xqdoc.org/1.0">
    <xqdoc:control>
        <xqdoc:date>2019-05-14T12:08:24.519-04:00</xqdoc:date>
        <xqdoc:location>java:org.exist.xquery.functions.map.MapModule</xqdoc:location>
    </xqdoc:control>
    <xqdoc:module type="library">
        <xqdoc:uri>http://www.w3.org/2005/xpath-functions/map</xqdoc:uri>
        <xqdoc:name>map</xqdoc:name>
        <xqdoc:comment>
            <xqdoc:description>Functions that operate on maps</xqdoc:description>
        </xqdoc:comment>
    </xqdoc:module>
    <xqdoc:functions>
        <xqdoc:function>
            <xqdoc:name>map:merge</xqdoc:name>
            <xqdoc:signature>map:merge($maps as map(*)*) as map(*)</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Returns a map that combines the entries from a number of existing maps.</xqdoc:description>
                <xqdoc:param>$maps* Existing maps to merge to create a new map.</xqdoc:param>
                <xqdoc:return>map(*)</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>map:size</xqdoc:name>
            <xqdoc:signature>map:size($input as map(*)) as xs:integer</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Returns the number of entries in the supplied map.</xqdoc:description>
                <xqdoc:param>$input Any map to determine the size of.</xqdoc:param>
                <xqdoc:return>xs:integer</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>map:keys</xqdoc:name>
            <xqdoc:signature>map:keys($map as map(*)) as xs:anyAtomicType*</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Returns a sequence containing all the key values present in a map.</xqdoc:description>
                <xqdoc:param>$map The map</xqdoc:param>
                <xqdoc:return>xs:anyAtomicType*</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>map:contains</xqdoc:name>
            <xqdoc:signature>map:contains($map as map(*), $key as xs:anyAtomicType) as xs:boolean</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Tests whether a supplied map contains an entry for a given key.</xqdoc:description>
                <xqdoc:param>$map The map</xqdoc:param>
                <xqdoc:param>$key The key to look up</xqdoc:param>
                <xqdoc:return>xs:boolean</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>map:get</xqdoc:name>
            <xqdoc:signature>map:get($map as map(*), $key as xs:anyAtomicType) as item()*</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Returns the value associated with a supplied key in a given map.</xqdoc:description>
                <xqdoc:param>$map The map</xqdoc:param>
                <xqdoc:param>$key The key to look up</xqdoc:param>
                <xqdoc:return>item()*</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>map:put</xqdoc:name>
            <xqdoc:signature>map:put($map as map(*), $key as xs:anyAtomicType, $value as item()*) as map(*)</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Returns a map containing all the contents of the supplied map, but with an additional entry, which replaces any existing entry for the same key.</xqdoc:description>
                <xqdoc:param>$map The map</xqdoc:param>
                <xqdoc:param>$key The key for the entry to insert</xqdoc:param>
                <xqdoc:param>$value* The value for the entry to insert</xqdoc:param>
                <xqdoc:return>map(*)</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>map:entry</xqdoc:name>
            <xqdoc:signature>map:entry($key as xs:anyAtomicType, $value as item()*) as map(*)</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Creates a map that contains a single entry (a key-value pair).</xqdoc:description>
                <xqdoc:param>$key The key</xqdoc:param>
                <xqdoc:param>$value* The associated value</xqdoc:param>
                <xqdoc:return>map(*)</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>map:remove</xqdoc:name>
            <xqdoc:signature>map:remove($map as map(*), $key as xs:anyAtomicType*) as map(*)</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Constructs a new map by removing an entry from an existing map.</xqdoc:description>
                <xqdoc:param>$map The map</xqdoc:param>
                <xqdoc:param>$key* The key to remove</xqdoc:param>
                <xqdoc:return>map(*)</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>map:for-each</xqdoc:name>
            <xqdoc:signature>map:for-each($input as map(*), $action as function(*)) as item()*</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>takes any map as its $input argument and applies the supplied function to each entry in the map, in implementation-dependent order; the result is the sequence obtained by concatenating the results of these function calls. The function supplied as $action takes two arguments. It is called supplying the key of the map entry as the first argument, and the associated value as the second argument.</xqdoc:description>
                <xqdoc:param>$input The map</xqdoc:param>
                <xqdoc:param>$action The function to be called for each entry</xqdoc:param>
                <xqdoc:return>item()*</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
    </xqdoc:functions>
</xqdoc:xqdoc>