<xqdoc:xqdoc xmlns:xqdoc="http://www.xqdoc.org/1.0">
    <xqdoc:control>
        <xqdoc:date>2019-05-14T12:08:24.519-04:00</xqdoc:date>
        <xqdoc:location>java:org.exist.xquery.modules.image.ImageModule</xqdoc:location>
    </xqdoc:control>
    <xqdoc:module type="library">
        <xqdoc:uri>http://exist-db.org/xquery/image</xqdoc:uri>
        <xqdoc:name>image</xqdoc:name>
        <xqdoc:comment>
            <xqdoc:description>A module for performing operations on Images stored in the eXist db</xqdoc:description>
        </xqdoc:comment>
    </xqdoc:module>
    <xqdoc:functions>
        <xqdoc:function>
            <xqdoc:name>image:get-width</xqdoc:name>
            <xqdoc:signature>image:get-width($image as xs:base64Binary) as xs:integer?</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Gets the width of the image passed in, returning an integer of the images width in pixels or an empty sequence if the image is invalid.</xqdoc:description>
                <xqdoc:param>$image The image data</xqdoc:param>
                <xqdoc:return>xs:integer? : the width in pixels</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>image:get-height</xqdoc:name>
            <xqdoc:signature>image:get-height($image as xs:base64Binary) as xs:integer?</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Gets the Height of the image passed in, returning an integer of the images Height in pixels or an empty sequence if the image is invalid.</xqdoc:description>
                <xqdoc:param>$image The image data</xqdoc:param>
                <xqdoc:return>xs:integer? : the height in pixels</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>image:scale</xqdoc:name>
            <xqdoc:signature>image:scale($image as xs:base64Binary, $dimension as xs:integer*, $mimeType as xs:string) as xs:base64Binary?</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Scale the image image to a specified dimension.  If no dimensions are specified, then the default values are 'maxheight = 100' and 'maxwidth = 100'.</xqdoc:description>
                <xqdoc:param>$image The image data</xqdoc:param>
                <xqdoc:param>$dimension* The maximum dimension of the scaled image. expressed in pixels (maxheight, maxwidth).  If empty, then the default values are 'maxheight = 100' and 'maxwidth = 100'.</xqdoc:param>
                <xqdoc:param>$mimeType The mime-type of the image</xqdoc:param>
                <xqdoc:return>xs:base64Binary? : the scaled image or an empty sequence if $image is invalid</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>image:thumbnail</xqdoc:name>
            <xqdoc:signature>image:thumbnail($collection as xs:anyURI, $thumbnail-location as xs:anyURI?, $dimension as xs:integer*, $prefix as xs:string?) as xs:string*</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Generate thumbnails from the given database collection</xqdoc:description>
                <xqdoc:param>$collection The URI to the collection</xqdoc:param>
                <xqdoc:param>$thumbnail-location? The location in the database where the thumbnails should be created, this can be a local path, with the prefix 'xmldb:' a absolute path within the database or with 'rel:' path relative to the given $collection.  You can leave this empty then the default is 'rel:/thumbs'. </xqdoc:param>
                <xqdoc:param>$dimension* The dimension of the thumbnails, if empty then the default values are 'maxheight = 100' and 'maxwidth = 100', the first value is 'maxheight' and the second 'maxwidth'. </xqdoc:param>
                <xqdoc:param>$prefix? The prefix to append to the thumbnail filenames</xqdoc:param>
                <xqdoc:return>xs:string* : the result</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>image:crop</xqdoc:name>
            <xqdoc:signature>image:crop($image as xs:base64Binary, $dimension as xs:integer*, $mimeType as xs:string) as xs:base64Binary?</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Crop the image $image to a specified dimension.  If no dimensions are specified, then the default values are 'y1 = 0', 'x1 = 0', 'x2 = 100' and 'y2 = 100'.</xqdoc:description>
                <xqdoc:param>$image The image data</xqdoc:param>
                <xqdoc:param>$dimension* The maximum dimension of the cropd image. expressed in pixels (x1, y1, x2, y2).  If empty, then the default values are are 'y1 = 0', 'x1 = 0', 'x2 = 100' and 'y2 = 100'.</xqdoc:param>
                <xqdoc:param>$mimeType The mime-type of the image</xqdoc:param>
                <xqdoc:return>xs:base64Binary? : the cropd image or an empty sequence if $image is invalid</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
    </xqdoc:functions>
</xqdoc:xqdoc>