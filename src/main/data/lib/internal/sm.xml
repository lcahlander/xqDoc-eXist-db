<xqdoc:xqdoc xmlns:xqdoc="http://www.xqdoc.org/1.0">
    <xqdoc:control>
        <xqdoc:date>2019-05-14T12:08:24.519-04:00</xqdoc:date>
        <xqdoc:location>java:org.exist.xquery.functions.securitymanager.SecurityManagerModule</xqdoc:location>
    </xqdoc:control>
    <xqdoc:module type="library">
        <xqdoc:uri>http://exist-db.org/xquery/securitymanager</xqdoc:uri>
        <xqdoc:name>sm</xqdoc:name>
        <xqdoc:comment>
            <xqdoc:description>Module for interacting with the Security Manager</xqdoc:description>
        </xqdoc:comment>
    </xqdoc:module>
    <xqdoc:functions>
        <xqdoc:function>
            <xqdoc:name>sm:create-account</xqdoc:name>
            <xqdoc:signature>sm:create-account($username as xs:string, $password as xs:string, $primary-group as xs:string, $groups as xs:string*) as empty-sequence()</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Creates a User Account.</xqdoc:description>
                <xqdoc:param>$username The User's username.</xqdoc:param>
                <xqdoc:param>$password The User's password.</xqdoc:param>
                <xqdoc:param>$primary-group The primary group of the user.</xqdoc:param>
                <xqdoc:param>$groups* Any supplementary groups of which the user should be a member.</xqdoc:param>
                <xqdoc:return>empty-sequence()</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>sm:create-account</xqdoc:name>
            <xqdoc:signature>sm:create-account($username as xs:string, $password as xs:string, $primary-group as xs:string, $groups as xs:string*, $full-name as xs:string, $description as xs:string) as empty-sequence()</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Creates a User Account.</xqdoc:description>
                <xqdoc:param>$username The User's username.</xqdoc:param>
                <xqdoc:param>$password The User's password.</xqdoc:param>
                <xqdoc:param>$primary-group The primary group of the user.</xqdoc:param>
                <xqdoc:param>$groups* Any supplementary groups of which the user should be a member.</xqdoc:param>
                <xqdoc:param>$full-name The full name of the user.</xqdoc:param>
                <xqdoc:param>$description A description of the user.</xqdoc:param>
                <xqdoc:return>empty-sequence()</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>sm:create-account</xqdoc:name>
            <xqdoc:signature>sm:create-account($username as xs:string, $password as xs:string, $groups as xs:string*) as empty-sequence()</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Creates a User Account and a personal group for that user. The personal group takes the same name as the user, and is set as the user's primary group.</xqdoc:description>
                <xqdoc:param>$username The User's username.</xqdoc:param>
                <xqdoc:param>$password The User's password.</xqdoc:param>
                <xqdoc:param>$groups* Any supplementary groups of which the user should be a member.</xqdoc:param>
                <xqdoc:return>empty-sequence()</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>sm:create-account</xqdoc:name>
            <xqdoc:signature>sm:create-account($username as xs:string, $password as xs:string, $groups as xs:string*, $full-name as xs:string, $description as xs:string) as empty-sequence()</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Creates a User Account and a personal group for that user. The personal group takes the same name as the user, and is set as the user's primary group.</xqdoc:description>
                <xqdoc:param>$username The User's username.</xqdoc:param>
                <xqdoc:param>$password The User's password.</xqdoc:param>
                <xqdoc:param>$groups* Any supplementary groups of which the user should be a member.</xqdoc:param>
                <xqdoc:param>$full-name The full name of the user.</xqdoc:param>
                <xqdoc:param>$description A description of the user.</xqdoc:param>
                <xqdoc:return>empty-sequence()</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>sm:remove-account</xqdoc:name>
            <xqdoc:signature>sm:remove-account($username as xs:string) as empty-sequence()</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Removes a User Account. If the user has a personal group you are responsible for removing that separately through sm:remove-group. </xqdoc:description>
                <xqdoc:param>$username The User's username.</xqdoc:param>
                <xqdoc:return>empty-sequence()</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>sm:passwd</xqdoc:name>
            <xqdoc:signature>sm:passwd($username as xs:string, $password as xs:string) as empty-sequence()</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Changes the password of a User Account.</xqdoc:description>
                <xqdoc:param>$username The User's username.</xqdoc:param>
                <xqdoc:param>$password The User's new password.</xqdoc:param>
                <xqdoc:return>empty-sequence()</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>sm:passwd-hash</xqdoc:name>
            <xqdoc:signature>sm:passwd-hash($username as xs:string, $password-digest as xs:string) as empty-sequence()</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Changes the password of a User Account by directly setting the stored digest password. The use-case for this function is migrating a user from one eXist instance to another.</xqdoc:description>
                <xqdoc:param>$username The User's username.</xqdoc:param>
                <xqdoc:param>$password-digest The encoded digest of the User's new password (assumes eXist's default digest algorithm).</xqdoc:param>
                <xqdoc:return>empty-sequence()</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>sm:find-users-by-username</xqdoc:name>
            <xqdoc:signature>sm:find-users-by-username($starts-with as xs:string) as xs:string*</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Finds users whoose username starts with a matching string</xqdoc:description>
                <xqdoc:param>$starts-with The starting string against which to match usernames</xqdoc:param>
                <xqdoc:return>xs:string* : The list of matching usernames</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>sm:find-users-by-name</xqdoc:name>
            <xqdoc:signature>sm:find-users-by-name($starts-with as xs:string) as xs:string*</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Finds users whoose personal name starts with a matching string</xqdoc:description>
                <xqdoc:param>$starts-with The starting string against which to match a personal name</xqdoc:param>
                <xqdoc:return>xs:string* : The list of matching usernames</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>sm:find-users-by-name-part</xqdoc:name>
            <xqdoc:signature>sm:find-users-by-name-part($starts-with as xs:string) as xs:string*</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Finds users whoose first name or last name starts with a matching string</xqdoc:description>
                <xqdoc:param>$starts-with The starting string against which to match a first or last name</xqdoc:param>
                <xqdoc:return>xs:string* : The list of matching usernames</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>sm:list-users</xqdoc:name>
            <xqdoc:signature>sm:list-users() as xs:string+</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>List all users. You must be a DBA to enumerate all users, if you are not a DBA you will just get the username of the currently logged in user.</xqdoc:description>
                <xqdoc:return>xs:string+ : The list of users.</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>sm:user-exists</xqdoc:name>
            <xqdoc:signature>sm:user-exists($user as xs:string) as xs:boolean</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Determines whether a user exists.</xqdoc:description>
                <xqdoc:param>$user The username to check for existence.</xqdoc:param>
                <xqdoc:return>xs:boolean : true if the user account exists, false otherwise.</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>sm:get-umask</xqdoc:name>
            <xqdoc:signature>sm:get-umask($username as xs:string) as xs:int*</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Gets the umask of a Users Account.</xqdoc:description>
                <xqdoc:param>$username The username of the account to retrieve the umask for.</xqdoc:param>
                <xqdoc:return>xs:int* : The umask of the users account expressed as an integer</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>sm:set-umask</xqdoc:name>
            <xqdoc:signature>sm:set-umask($username as xs:string, $umask as xs:int) as empty-sequence()</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Sets the umask of a Users Account.</xqdoc:description>
                <xqdoc:param>$username The username of the account to set the umask for.</xqdoc:param>
                <xqdoc:param>$umask The umask to set as an integer.</xqdoc:param>
                <xqdoc:return>empty-sequence()</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>sm:get-account-metadata-keys</xqdoc:name>
            <xqdoc:signature>sm:get-account-metadata-keys() as xs:anyURI*</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Gets a sequence of the metadata attribute keys that may be used for an account.</xqdoc:description>
                <xqdoc:return>xs:anyURI* : The fully qualified metadata attribute key names</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>sm:get-account-metadata-keys</xqdoc:name>
            <xqdoc:signature>sm:get-account-metadata-keys($username as xs:string) as xs:anyURI*</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Gets a sequence of the metadata attribute keys present for an account</xqdoc:description>
                <xqdoc:param>$username The username of the account to retrieve metadata from.</xqdoc:param>
                <xqdoc:return>xs:anyURI* : The fully qualified metadata attribute key names</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>sm:get-account-metadata</xqdoc:name>
            <xqdoc:signature>sm:get-account-metadata($username as xs:string, $attribute as xs:anyURI) as xs:string?</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Gets a metadata attribute value for an account</xqdoc:description>
                <xqdoc:param>$username The username of the account to retrieve metadata from.</xqdoc:param>
                <xqdoc:param>$attribute The fully qualified metadata attribute key name</xqdoc:param>
                <xqdoc:return>xs:string? : The metadata value</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>sm:get-group-metadata-keys</xqdoc:name>
            <xqdoc:signature>sm:get-group-metadata-keys() as xs:anyURI*</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Gets a sequence of the metadata attribute keys that may be used for a group.</xqdoc:description>
                <xqdoc:return>xs:anyURI* : The fully qualified metadata attribute key names</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>sm:get-group-metadata-keys</xqdoc:name>
            <xqdoc:signature>sm:get-group-metadata-keys($group-name as xs:string) as xs:anyURI*</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Gets a sequence of the metadata attribute keys present for a group</xqdoc:description>
                <xqdoc:param>$group-name The name of the group to retrieve metadata from.</xqdoc:param>
                <xqdoc:return>xs:anyURI* : The fully qualified metadata attribute key names</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>sm:get-group-metadata</xqdoc:name>
            <xqdoc:signature>sm:get-group-metadata($group-name as xs:string, $attribute as xs:anyURI) as xs:string?</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Gets a metadata attribute value for a group</xqdoc:description>
                <xqdoc:param>$group-name The name of the group to retrieve metadata from.</xqdoc:param>
                <xqdoc:param>$attribute The fully qualified metadata attribute key name</xqdoc:param>
                <xqdoc:return>xs:string? : The metadata value</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>sm:set-account-metadata</xqdoc:name>
            <xqdoc:signature>sm:set-account-metadata($username as xs:string, $attribute as xs:anyURI, $value as xs:string) as empty-sequence()</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Sets a metadata attribute value for an account</xqdoc:description>
                <xqdoc:param>$username The username of the account to set metadata for.</xqdoc:param>
                <xqdoc:param>$attribute The metadata attribute key.</xqdoc:param>
                <xqdoc:param>$value The metadata value,</xqdoc:param>
                <xqdoc:return>empty-sequence()</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>sm:set-group-metadata</xqdoc:name>
            <xqdoc:signature>sm:set-group-metadata($group-name as xs:string, $attribute as xs:anyURI, $value as xs:string) as empty-sequence()</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Sets a metadata attribute value for a group</xqdoc:description>
                <xqdoc:param>$group-name The name of the group to set metadata for.</xqdoc:param>
                <xqdoc:param>$attribute The metadata attribute key.</xqdoc:param>
                <xqdoc:param>$value The metadata value,</xqdoc:param>
                <xqdoc:return>empty-sequence()</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>sm:is-account-enabled</xqdoc:name>
            <xqdoc:signature>sm:is-account-enabled($username as xs:string) as xs:boolean</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Determines whether a user account is enabled. You must be a DBA, or you must be enquiring about your own user account.</xqdoc:description>
                <xqdoc:param>$username The username of the account to check the status for.</xqdoc:param>
                <xqdoc:return>xs:boolean : true if the account is enabled, false otherwise.</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>sm:set-account-enabled</xqdoc:name>
            <xqdoc:signature>sm:set-account-enabled($username as xs:string, $enabled as xs:boolean) as empty-sequence()</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Enabled or disables a users account. You must be a DBA to enable or disable an account.</xqdoc:description>
                <xqdoc:param>$username The username of the account to enable or disable.</xqdoc:param>
                <xqdoc:param>$enabled true to enable the account, false to disable the account.</xqdoc:param>
                <xqdoc:return>empty-sequence()</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>sm:create-group</xqdoc:name>
            <xqdoc:signature>sm:create-group($group-name as xs:string) as item()</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Creates a User Group. The current user will be set as the group's manager.</xqdoc:description>
                <xqdoc:param>$group-name The name of the group to create.</xqdoc:param>
                <xqdoc:return>item()</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>sm:create-group</xqdoc:name>
            <xqdoc:signature>sm:create-group($group-name as xs:string, $description as xs:string) as item()</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Creates a User Group. The current user will be set as the group's manager.</xqdoc:description>
                <xqdoc:param>$group-name The name of the group to create.</xqdoc:param>
                <xqdoc:param>$description A description of the group.</xqdoc:param>
                <xqdoc:return>item()</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>sm:create-group</xqdoc:name>
            <xqdoc:signature>sm:create-group($group-name as xs:string, $managers as xs:string+, $description as xs:string) as item()</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Creates a User Group. The current user will be set as a manager of the group in addition to the specified managers.</xqdoc:description>
                <xqdoc:param>$group-name The name of the group to create.</xqdoc:param>
                <xqdoc:param>$managers+ The usernames of users that will be a manager of this group.</xqdoc:param>
                <xqdoc:param>$description A description of the group.</xqdoc:param>
                <xqdoc:return>item()</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>sm:remove-group</xqdoc:name>
            <xqdoc:signature>sm:remove-group($group-name as xs:string) as item()</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Remove a User Group. Any resources owned by the group will be moved to the 'guest' group.</xqdoc:description>
                <xqdoc:param>$group-name The group-id to delete</xqdoc:param>
                <xqdoc:return>item()</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>sm:add-group-member</xqdoc:name>
            <xqdoc:signature>sm:add-group-member($group as xs:string, $member as xs:string+) as empty-sequence()</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Adds a user to a group. Can only be called by a group manager or DBA.</xqdoc:description>
                <xqdoc:param>$group The name of the group whoose membership you wish to modify.</xqdoc:param>
                <xqdoc:param>$member+ The user(s) to add to the group membership.</xqdoc:param>
                <xqdoc:return>empty-sequence()</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>sm:remove-group-member</xqdoc:name>
            <xqdoc:signature>sm:remove-group-member($group as xs:string, $member as xs:string+) as empty-sequence()</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Removes a user from a group. Can only be called by a group manager of DBA.</xqdoc:description>
                <xqdoc:param>$group The name of the group whoose membership you wish to modify.</xqdoc:param>
                <xqdoc:param>$member+ The user(s) to remove from the group membership.</xqdoc:param>
                <xqdoc:return>empty-sequence()</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>sm:add-group-manager</xqdoc:name>
            <xqdoc:signature>sm:add-group-manager($group as xs:string, $manager as xs:string+) as empty-sequence()</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Adds a manager to a groups managers. Can only be called by a group manager or DBA.</xqdoc:description>
                <xqdoc:param>$group The name of the group to which you wish to add a manager(s).</xqdoc:param>
                <xqdoc:param>$manager+ The user(s) to add to the group managers.</xqdoc:param>
                <xqdoc:return>empty-sequence()</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>sm:remove-group-manager</xqdoc:name>
            <xqdoc:signature>sm:remove-group-manager($group as xs:string, $manager as xs:string+) as empty-sequence()</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Removes a manager from a groups managers. Can only be called by a group manager of DBA.</xqdoc:description>
                <xqdoc:param>$group The name of the group from which you wish to remove a manager(s)</xqdoc:param>
                <xqdoc:param>$manager+ The user(s) to remove from the group managers.</xqdoc:param>
                <xqdoc:return>empty-sequence()</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>sm:get-group-managers</xqdoc:name>
            <xqdoc:signature>sm:get-group-managers($group as xs:string) as xs:string+</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Gets a list of the group managers. Can only be called by a group manager.</xqdoc:description>
                <xqdoc:param>$group The group name to retrieve the list of managers for.</xqdoc:param>
                <xqdoc:return>xs:string+ : The list of group managers for the group $group</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>sm:get-group-members</xqdoc:name>
            <xqdoc:signature>sm:get-group-members($group as xs:string) as xs:string+</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Gets a list of the group members.</xqdoc:description>
                <xqdoc:param>$group The group name to retrieve the list of members for.</xqdoc:param>
                <xqdoc:return>xs:string+ : The list of group members for the group $group</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>sm:is-dba</xqdoc:name>
            <xqdoc:signature>sm:is-dba($username as xs:string) as xs:boolean</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Determines if the user is a DBA.</xqdoc:description>
                <xqdoc:param>$username The username of the user account to check if they are a member of the DBA group.</xqdoc:param>
                <xqdoc:return>xs:boolean : true of the user is a DBA, false otherwise.</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>sm:set-user-primary-group</xqdoc:name>
            <xqdoc:signature>sm:set-user-primary-group($username as xs:string, $group as xs:string) as empty-sequence()</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Sets the primary group of a user account. If the user is not yet in the group, then they are added to the group first.</xqdoc:description>
                <xqdoc:param>$username The name of the user account to set the primary group for.</xqdoc:param>
                <xqdoc:param>$group The group to set as the primary group for the user.</xqdoc:param>
                <xqdoc:return>empty-sequence()</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>sm:list-groups</xqdoc:name>
            <xqdoc:signature>sm:list-groups() as xs:string*</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>List all groups</xqdoc:description>
                <xqdoc:return>xs:string* : The list of groups</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>sm:find-groups-by-groupname</xqdoc:name>
            <xqdoc:signature>sm:find-groups-by-groupname($starts-with as xs:string) as xs:string*</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Finds groups whoose group name starts with a matching string</xqdoc:description>
                <xqdoc:param>$starts-with The starting string against which to match group names</xqdoc:param>
                <xqdoc:return>xs:string* : The list of matching group names</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>sm:find-groups-where-groupname-contains</xqdoc:name>
            <xqdoc:signature>sm:find-groups-where-groupname-contains($fragment as xs:string) as xs:string*</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Finds groups whoose group name contains the string fragment</xqdoc:description>
                <xqdoc:param>$fragment The fragment against which to match group names</xqdoc:param>
                <xqdoc:return>xs:string* : The list of matching group names</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>sm:get-user-groups</xqdoc:name>
            <xqdoc:signature>sm:get-user-groups($user as xs:string) as xs:string+</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Returns the sequence of groups that the user $user is a member of. You must be a DBA or logged in as the user for which you are trying to retrieve group details for.</xqdoc:description>
                <xqdoc:param>$user The username to retrieve the group membership list for.</xqdoc:param>
                <xqdoc:return>xs:string+ : The users group memberships</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>sm:get-user-primary-group</xqdoc:name>
            <xqdoc:signature>sm:get-user-primary-group($user as xs:string) as xs:string</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Returns the primary group of the user $user. You must be a DBA or logged in as the user for which you are trying to retrieve group details for.</xqdoc:description>
                <xqdoc:param>$user The username to retrieve the primary group of.</xqdoc:param>
                <xqdoc:return>xs:string : The users primary group</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>sm:group-exists</xqdoc:name>
            <xqdoc:signature>sm:group-exists($group as xs:string) as xs:boolean</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Determines whether a user group exists.</xqdoc:description>
                <xqdoc:param>$group The name of the user group to check for existence.</xqdoc:param>
                <xqdoc:return>xs:boolean : true if the user group exists, false otherwise.</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>sm:get-permissions</xqdoc:name>
            <xqdoc:signature>sm:get-permissions($path as xs:anyURI) as document-node()</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Gets the permissions of a resource or collection.</xqdoc:description>
                <xqdoc:param>$path The path to the resource or collection to get permissions of.</xqdoc:param>
                <xqdoc:return>document-node() : The permissions of the resource or collection</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>sm:add-user-ace</xqdoc:name>
            <xqdoc:signature>sm:add-user-ace($path as xs:anyURI, $user-name as xs:string, $allowed as xs:boolean, $mode as xs:string) as empty-sequence()</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Adds a User ACE to the ACL of a resource or collection.</xqdoc:description>
                <xqdoc:param>$path The path to the resource or collection whose ACL you wish to add the ACE to.</xqdoc:param>
                <xqdoc:param>$user-name The name of the user to create an ACE for.</xqdoc:param>
                <xqdoc:param>$allowed true() if the ACE is allowing the permission mode, or false() if we are denying the permission mode</xqdoc:param>
                <xqdoc:param>$mode The mode to set on the ACE e.g. 'rwx'</xqdoc:param>
                <xqdoc:return>empty-sequence()</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>sm:add-group-ace</xqdoc:name>
            <xqdoc:signature>sm:add-group-ace($path as xs:anyURI, $group-name as xs:string, $allowed as xs:boolean, $mode as xs:string) as empty-sequence()</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Adds a Group ACE to the ACL of a resource or collection.</xqdoc:description>
                <xqdoc:param>$path The path to the resource or collection whose ACL you wish to add the ACE to.</xqdoc:param>
                <xqdoc:param>$group-name The name of the group to create an ACE for.</xqdoc:param>
                <xqdoc:param>$allowed true() if the ACE is allowing the permission mode, or false() if we are denying the permission mode</xqdoc:param>
                <xqdoc:param>$mode The mode to set on the ACE e.g. 'rwx'</xqdoc:param>
                <xqdoc:return>empty-sequence()</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>sm:insert-user-ace</xqdoc:name>
            <xqdoc:signature>sm:insert-user-ace($path as xs:anyURI, $index as xs:int, $user-name as xs:string, $allowed as xs:boolean, $mode as xs:string) as empty-sequence()</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Inserts a User ACE into the ACL of a resource or collection.</xqdoc:description>
                <xqdoc:param>$path The path to the resource or collection whose ACL you wish to add the ACE to.</xqdoc:param>
                <xqdoc:param>$index The index in the ACL to insert the ACE before, subsequent entries will be renumbered</xqdoc:param>
                <xqdoc:param>$user-name The name of the user to create an ACE for.</xqdoc:param>
                <xqdoc:param>$allowed true() if the ACE is allowing the permission mode, or false() if we are denying the permission mode</xqdoc:param>
                <xqdoc:param>$mode The mode to set on the ACE e.g. 'rwx'</xqdoc:param>
                <xqdoc:return>empty-sequence()</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>sm:insert-group-ace</xqdoc:name>
            <xqdoc:signature>sm:insert-group-ace($path as xs:anyURI, $index as xs:int, $group-name as xs:string, $allowed as xs:boolean, $mode as xs:string) as empty-sequence()</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Inserts a Group ACE into the ACL of a resource or collection.</xqdoc:description>
                <xqdoc:param>$path The path to the resource or collection whose ACL you wish to add the ACE to.</xqdoc:param>
                <xqdoc:param>$index The index in the ACL to insert the ACE before, subsequent entries will be renumbered</xqdoc:param>
                <xqdoc:param>$group-name The name of the group to create an ACE for.</xqdoc:param>
                <xqdoc:param>$allowed true() if the ACE is allowing the permission mode, or false() if we are denying the permission mode</xqdoc:param>
                <xqdoc:param>$mode The mode to set on the ACE e.g. 'rwx'</xqdoc:param>
                <xqdoc:return>empty-sequence()</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>sm:modify-ace</xqdoc:name>
            <xqdoc:signature>sm:modify-ace($path as xs:anyURI, $index as xs:int, $allowed as xs:boolean, $mode as xs:string) as empty-sequence()</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Modified an ACE of an ACL of a resource or collection.</xqdoc:description>
                <xqdoc:param>$path The path to the resource or collection whose ACL you wish to modify the ACE of.</xqdoc:param>
                <xqdoc:param>$index The index of the ACE in the ACL to modify</xqdoc:param>
                <xqdoc:param>$allowed true() if the ACE is allowing the permission mode, or false() if we are denying the permission mode</xqdoc:param>
                <xqdoc:param>$mode The mode to set on the ACE e.g. 'rwx'</xqdoc:param>
                <xqdoc:return>empty-sequence()</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>sm:remove-ace</xqdoc:name>
            <xqdoc:signature>sm:remove-ace($path as xs:anyURI, $index as xs:int) as empty-sequence()</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Removes an ACE from the ACL of a resource or collection.</xqdoc:description>
                <xqdoc:param>$path The path to the resource or collection whose ACL you wish to remove the ACE from.</xqdoc:param>
                <xqdoc:param>$index The index of the ACE in the ACL to remove, subsequent entries will be renumbered</xqdoc:param>
                <xqdoc:return>empty-sequence()</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>sm:clear-acl</xqdoc:name>
            <xqdoc:signature>sm:clear-acl($path as xs:anyURI) as empty-sequence()</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Removes all ACEs from the ACL of a resource or collection.</xqdoc:description>
                <xqdoc:param>$path The path to the resource or collection whose ACL you wish to clear.</xqdoc:param>
                <xqdoc:return>empty-sequence()</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>sm:chmod</xqdoc:name>
            <xqdoc:signature>sm:chmod($path as xs:anyURI, $mode as xs:string) as empty-sequence()</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Changes the mode of a resource or collection.</xqdoc:description>
                <xqdoc:param>$path The path to the resource or collection whose mode you wish to set</xqdoc:param>
                <xqdoc:param>$mode The mode to set on the resource or collection e.g. 'rwxrwxrwx'</xqdoc:param>
                <xqdoc:return>empty-sequence()</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>sm:chown</xqdoc:name>
            <xqdoc:signature>sm:chown($path as xs:anyURI, $owner as xs:string) as empty-sequence()</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Changes the owner of a resource or collection.</xqdoc:description>
                <xqdoc:param>$path The path to the resource or collection whose owner you wish to set</xqdoc:param>
                <xqdoc:param>$owner The name of the user owner to set on the resource or collection e.g. 'guest'. You may also provide a group owner, by using the syntax 'user:group' if you wish.</xqdoc:param>
                <xqdoc:return>empty-sequence()</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>sm:chgrp</xqdoc:name>
            <xqdoc:signature>sm:chgrp($path as xs:anyURI, $group-name as xs:string) as empty-sequence()</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Changes the group owner of a resource or collection.</xqdoc:description>
                <xqdoc:param>$path The path to the resource or collection whose group owner you wish to set</xqdoc:param>
                <xqdoc:param>$group-name The name of the user group owner to set on the resource or collection e.g. 'guest'</xqdoc:param>
                <xqdoc:return>empty-sequence()</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>sm:mode-to-octal</xqdoc:name>
            <xqdoc:signature>sm:mode-to-octal($mode as xs:string) as xs:string</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Converts a mode string e.g. 'rwxrwxrwx' to an octal number e.g. 0777.</xqdoc:description>
                <xqdoc:param>$mode The mode to convert to an octal string.</xqdoc:param>
                <xqdoc:return>xs:string</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>sm:octal-to-mode</xqdoc:name>
            <xqdoc:signature>sm:octal-to-mode($octal as xs:string) as xs:string</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Converts an octal string e.g. '0777' to a mode string e.g. 'rwxrwxrwx'.</xqdoc:description>
                <xqdoc:param>$octal The octal string to convert to a mode.</xqdoc:param>
                <xqdoc:return>xs:string</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>sm:has-access</xqdoc:name>
            <xqdoc:signature>sm:has-access($path as xs:anyURI, $mode as xs:string) as xs:boolean</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Checks whether the current user has access to the resource or collection.</xqdoc:description>
                <xqdoc:param>$path The path to the resource or collection whose access of which you wish to check</xqdoc:param>
                <xqdoc:param>$mode The partial mode to check against the resource or collection e.g. 'rwx'</xqdoc:param>
                <xqdoc:return>xs:boolean</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>sm:is-authenticated</xqdoc:name>
            <xqdoc:signature>sm:is-authenticated() as xs:boolean</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Returns the true() if current account is authenticated, false() otherwise.</xqdoc:description>
                <xqdoc:return>xs:boolean : true() if user from the xquery context is authenticated, false() otherwise</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>sm:is-externally-authenticated</xqdoc:name>
            <xqdoc:signature>sm:is-externally-authenticated() as xs:boolean</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Returns the true() if current account is authenticated by an external realm, false() otherwise.</xqdoc:description>
                <xqdoc:return>xs:boolean : true() if user from the xquery context is authenticated, false() otherwise</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>sm:id</xqdoc:name>
            <xqdoc:signature>sm:id() as document-node()</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Returns the user and group names of the account executing the XQuery. If the real and effective accounts are different, then both the real and effective account details are returned, otherwise only the real account details are returned.</xqdoc:description>
                <xqdoc:return>document-node() : Example output when an XQuery is running setUid &lt;id xmlns="http://exist-db.org/xquery/securitymanager"&gt;&lt;real&gt;&lt;username&gt;guest&lt;/username&gt;&lt;groups&gt;&lt;group&gt;guest&lt;/group&gt;&lt;/groups&gt;&lt;/real&gt;&lt;effective&gt;&lt;username&gt;admin&lt;/username&gt;&lt;groups&gt;&lt;group&gt;dba&lt;/group&gt;&lt;/groups&gt;&lt;/effective&gt;&lt;/id&gt;.</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
    </xqdoc:functions>
</xqdoc:xqdoc>