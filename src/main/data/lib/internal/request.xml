<xqdoc:xqdoc xmlns:xqdoc="http://www.xqdoc.org/1.0">
    <xqdoc:control>
        <xqdoc:date>2019-05-14T12:08:24.519-04:00</xqdoc:date>
        <xqdoc:location>java:org.exist.xquery.functions.request.RequestModule</xqdoc:location>
    </xqdoc:control>
    <xqdoc:module type="library">
        <xqdoc:uri>http://exist-db.org/xquery/request</xqdoc:uri>
        <xqdoc:name>request</xqdoc:name>
        <xqdoc:comment>
            <xqdoc:description>A module for dealing with HTTP requests.</xqdoc:description>
        </xqdoc:comment>
    </xqdoc:module>
    <xqdoc:functions>
        <xqdoc:function>
            <xqdoc:name>request:attribute-names</xqdoc:name>
            <xqdoc:signature>request:attribute-names() as xs:string*</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Returns the names of all request attributes in the current request.</xqdoc:description>
                <xqdoc:return>xs:string* : the names of all attributes attached to the current request</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>request:exists</xqdoc:name>
            <xqdoc:signature>request:exists() as xs:boolean</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Returns whether a request object exists.</xqdoc:description>
                <xqdoc:return>xs:boolean : true if the request object exists</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>request:get-attribute</xqdoc:name>
            <xqdoc:signature>request:get-attribute($attribute-name as xs:string) as item()*</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Returns the string value of the request attribute specified in the argument or the empty sequence if no such attribute exists. The attribute value should be a string.</xqdoc:description>
                <xqdoc:param>$attribute-name The name of the attribute</xqdoc:param>
                <xqdoc:return>item()* : the string value of the requested attribute</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>request:get-context-path</xqdoc:name>
            <xqdoc:signature>request:get-context-path() as xs:string</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Returns the context path of the current request, i.e. the portion of the request URI that indicates the context of the request.</xqdoc:description>
                <xqdoc:return>xs:string : the context path of the current request</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>request:get-cookie-names</xqdoc:name>
            <xqdoc:signature>request:get-cookie-names() as xs:string*</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Returns the names of all Cookies in the request</xqdoc:description>
                <xqdoc:return>xs:string* : a sequence of the names of all Cookies in the request</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>request:get-cookie-value</xqdoc:name>
            <xqdoc:signature>request:get-cookie-value($cookie-name as xs:string) as xs:string?</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Returns the value of a named Cookie.</xqdoc:description>
                <xqdoc:param>$cookie-name The name of the cookie to retrieve the value from.</xqdoc:param>
                <xqdoc:return>xs:string? : the value of the named Cookie</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>request:get-data</xqdoc:name>
            <xqdoc:signature>request:get-data() as item()?</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Returns the content of a POST request. If the HTTP Content-Type header in the request identifies it as a binary document, then xs:base64Binary is returned. If its not a binary document, we attempt to parse it as XML and return a document-node(). If its not a binary or XML document, any other data type is returned as an xs:string representation or an empty sequence if there is no data to be read.</xqdoc:description>
                <xqdoc:return>item()? : the content of a POST request</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>request:get-effective-uri</xqdoc:name>
            <xqdoc:signature>request:get-effective-uri() as xs:anyURI</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Returns the URI of the current request. If the request was forwarded via URL rewriting, the function returns the effective, rewritten URI, not the original URI which was received from the client.</xqdoc:description>
                <xqdoc:return>xs:anyURI : the URI of the request</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>request:get-header</xqdoc:name>
            <xqdoc:signature>request:get-header($header-name as xs:string) as xs:string?</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Returns the HTTP request header identified by $header-name. The list of all headers included in the HTTP request are available through the request:get-header-names function.</xqdoc:description>
                <xqdoc:param>$header-name The HTTP request header name</xqdoc:param>
                <xqdoc:return>xs:string? : the HTTP request header value</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>request:get-header-names</xqdoc:name>
            <xqdoc:signature>request:get-header-names() as xs:string*</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Returns a sequence containing the names of all headers passed in the current request</xqdoc:description>
                <xqdoc:return>xs:string* : a sequence containing the names of all headers passed in the current request</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>request:get-hostname</xqdoc:name>
            <xqdoc:signature>request:get-hostname() as xs:string</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Returns the hostname of the current request.</xqdoc:description>
                <xqdoc:return>xs:string : the hostname of the current request</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>request:get-method</xqdoc:name>
            <xqdoc:signature>request:get-method() as xs:string</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Returns the HTTP method of the current request.</xqdoc:description>
                <xqdoc:return>xs:string : the HTTP method of the current request</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>request:get-parameter</xqdoc:name>
            <xqdoc:signature>request:get-parameter($name as xs:string, $default-value as item()*) as xs:string*</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Returns the HTTP request parameter identified by $name. If the parameter could not be found, the default value is returned instead. Note: this function will not try to expand predefined entities like &amp;amp; or &amp;lt;, so a &amp;amp; passed through a parameter will indeed be treated as an &amp;amp; character.</xqdoc:description>
                <xqdoc:param>$name The parameter name</xqdoc:param>
                <xqdoc:param>$default-value* The default value if the parameter does not exist</xqdoc:param>
                <xqdoc:return>xs:string* : a sequence of parameter values</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>request:get-parameter</xqdoc:name>
            <xqdoc:signature>request:get-parameter($name as xs:string, $default-value as item()*, $failonerror as xs:boolean*) as xs:string*</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Returns the HTTP request parameter identified by $name. If the parameter could not be found, the default value is returned instead. Note: this function will not try to expand predefined entities like &amp;amp; or &amp;lt;, so a &amp;amp; passed through a parameter will indeed be treated as an &amp;amp; character.</xqdoc:description>
                <xqdoc:param>$name The parameter name</xqdoc:param>
                <xqdoc:param>$default-value* The default value if the parameter does not exist</xqdoc:param>
                <xqdoc:param>$failonerror* The fail on error flag.  If the value is set to false, then the function will not fail if there is no request in scope.</xqdoc:param>
                <xqdoc:return>xs:string* : a sequence of parameter values</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>request:get-parameter-names</xqdoc:name>
            <xqdoc:signature>request:get-parameter-names() as xs:string*</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Returns a sequence containing the names of all parameters passed in the current request</xqdoc:description>
                <xqdoc:return>xs:string* : the sequence containing the names of all parameters</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>request:get-path-info</xqdoc:name>
            <xqdoc:signature>request:get-path-info() as xs:string</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Returns any extra path information associated with the URL the client sent when it made this request.
For example an xquery GET or POST to /some/path/myfile.xq/extra/path will return /extra/path when myfile.xq is executed.</xqdoc:description>
                <xqdoc:return>xs:string : the request path information</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>request:get-query-string</xqdoc:name>
            <xqdoc:signature>request:get-query-string() as xs:string?</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Returns the full query string passed to the servlet (without the initial question mark).</xqdoc:description>
                <xqdoc:return>xs:string? : the query string</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>request:get-remote-addr</xqdoc:name>
            <xqdoc:signature>request:get-remote-addr() as xs:string</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Returns the IP address of the client machine that made the current request, as a string.</xqdoc:description>
                <xqdoc:return>xs:string : the IP address</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>request:get-remote-host</xqdoc:name>
            <xqdoc:signature>request:get-remote-host() as xs:string</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Returns the fully qualified name of the client or the last proxy that sent the current request.</xqdoc:description>
                <xqdoc:return>xs:string : the host name</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>request:get-remote-port</xqdoc:name>
            <xqdoc:signature>request:get-remote-port() as xs:integer</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Returns the Internet Protocol (IP) source port of the client or last proxy that sent the current request.</xqdoc:description>
                <xqdoc:return>xs:integer : the IP port number</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>request:get-scheme</xqdoc:name>
            <xqdoc:signature>request:get-scheme() as xs:string</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Returns the name of the scheme used in the current request, for example, http, https, or ftp.</xqdoc:description>
                <xqdoc:return>xs:string : the scheme of the current request</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>request:get-server-name</xqdoc:name>
            <xqdoc:signature>request:get-server-name() as xs:string</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Returns the server nodename of the current request.</xqdoc:description>
                <xqdoc:return>xs:string : the server host name of the current request</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>request:get-server-port</xqdoc:name>
            <xqdoc:signature>request:get-server-port() as xs:integer</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Returns the server port of the current request.</xqdoc:description>
                <xqdoc:return>xs:integer : the server port of the current request</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>request:get-servlet-path</xqdoc:name>
            <xqdoc:signature>request:get-servlet-path() as xs:string</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Returns the servlet path of the current request, i.e. the portion of the request URI that points to the servlet which is handling the request.
For example an xquery GET or POST to /some/path/myfile.xq/extra/path will return /some/path/myfile.xq when myfile.xq is executed.</xqdoc:description>
                <xqdoc:return>xs:string : the servlet path of the current request</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>request:get-uploaded-file-data</xqdoc:name>
            <xqdoc:signature>request:get-uploaded-file-data($upload-param-name as xs:string) as xs:base64Binary*</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Retrieve the base64 encoded data where the file part of a multi-part request has been stored. Returns the empty sequence if the request is not a multi-part request or the parameter name does not point to a file part.</xqdoc:description>
                <xqdoc:param>$upload-param-name The parameter name</xqdoc:param>
                <xqdoc:return>xs:base64Binary* : the base64 encoded data from the uploaded file</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>request:get-uploaded-file-name</xqdoc:name>
            <xqdoc:signature>request:get-uploaded-file-name($upload-param-name as xs:string) as xs:string*</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Retrieve the file name of an uploaded file from a multi-part request. This returns the file name of the file on the client (without path). Returns the empty sequence if the request is not a multi-part request or the parameter name does not point to a file part.</xqdoc:description>
                <xqdoc:param>$upload-param-name The parameter name</xqdoc:param>
                <xqdoc:return>xs:string* : the file name of the uploaded files</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>request:get-uploaded-file-size</xqdoc:name>
            <xqdoc:signature>request:get-uploaded-file-size($upload-param-name as xs:string) as xs:double*</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Retrieve the size of an uploaded file from a multi-part request. This returns the size of the file in bytes. Returns the empty sequence if the request is not a multi-part request or the parameter name does not point to a file part.</xqdoc:description>
                <xqdoc:param>$upload-param-name The parameter name</xqdoc:param>
                <xqdoc:return>xs:double* : the size of the uploaded files</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>request:get-uri</xqdoc:name>
            <xqdoc:signature>request:get-uri() as xs:anyURI</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Returns the URI of the current request. This will be the original URI as received from the client. Possible modifications done by the URL rewriter will not be visible.</xqdoc:description>
                <xqdoc:return>xs:anyURI : the URI of the request</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>request:get-url</xqdoc:name>
            <xqdoc:signature>request:get-url() as xs:string</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Returns the URL of the current request.</xqdoc:description>
                <xqdoc:return>xs:string : the URL of the current request</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>request:is-multipart-content</xqdoc:name>
            <xqdoc:signature>request:is-multipart-content() as xs:boolean</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Determine if the request contains multipart/form-data</xqdoc:description>
                <xqdoc:return>xs:boolean : true is the request is a multipart/form-data request else false.</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
        <xqdoc:function>
            <xqdoc:name>request:set-attribute</xqdoc:name>
            <xqdoc:signature>request:set-attribute($name as xs:string, $value as item()*) as item()</xqdoc:signature>
            <xqdoc:comment>
                <xqdoc:description>Stores a value in the current request using the supplied attribute name.</xqdoc:description>
                <xqdoc:param>$name The attribute name</xqdoc:param>
                <xqdoc:param>$value* The attribute value</xqdoc:param>
                <xqdoc:return>item()</xqdoc:return>
            </xqdoc:comment>
        </xqdoc:function>
    </xqdoc:functions>
</xqdoc:xqdoc>